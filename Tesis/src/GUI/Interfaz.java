/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import static com.Comandos.BuscarRecursoCommand.COMMAND_NAME;
import com.Comandos.EjecutarComando;
import com.ControladoresRed.ConexionUtils;
import com.ControladoresRed.Descargas;
import com.ControladoresRed.Mensaje;
import com.Entidades.Fantasma;
import com.Entidades.Nodo;
import com.Entidades.NodoRF;
import com.Entidades.Recurso;
import com.Utils.LoggerUtil;
import com.Utils.RespuestaUtils;
import com.Utils.SistemaUtil;
import static com.Utils.SistemaUtil.obtenerHora;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Map;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author Junior
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        EjecutarComando.linea("loadresources");
        results.setModel(Controller.fillTableDefault());
        SistemaUtil.logsGUI = logs; 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchtext = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        results = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        download = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        conection = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        logs = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        hashtable = new javax.swing.JTextArea();
        centraladdress = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        search = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1150, 680));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(null);

        searchtext.setEditable(false);
        searchtext.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchtext.setText("Buscar Recurso....");
        searchtext.setEnabled(false);
        searchtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchtextActionPerformed(evt);
            }
        });
        getContentPane().add(searchtext);
        searchtext.setBounds(380, 180, 640, 40);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel10.setText("Facultad de Ingeniería");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(900, 10, 230, 14);

        jLabel11.setText("Escuela de Ingeniería Informática");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(900, 30, 240, 14);

        jLabel12.setText("Trabajo Especial de Grado");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(900, 50, 240, 14);

        jLabel13.setText("Autores: Garry Jr. Bruno / Carlos Valero");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(900, 70, 250, 14);

        jLabel14.setText("Tutor: Wilmer Pereira");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(900, 90, 250, 14);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/img/ucab.png"))); // NOI18N
        jLabel16.setText("jLabel16");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(40, 10, 270, 80);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(890, 10, 20, 90);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 560, 1310, 130);

        results.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(results);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(380, 260, 470, 240);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Servidor central:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 200, 210, 14);

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Número de archivos ofrecidos: ");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(30, 360, 280, 14);

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Tabla de Hash");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(30, 440, 170, 14);

        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Logs de procesos:");
        getContentPane().add(jLabel22);
        jLabel22.setBounds(860, 240, 110, 14);

        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Hora de conexión:");
        getContentPane().add(jLabel23);
        jLabel23.setBounds(540, 140, 370, 20);

        download.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/img/descargar.png"))); // NOI18N
        download.setToolTipText("");
        download.setBorderPainted(false);
        download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadActionPerformed(evt);
            }
        });
        getContentPane().add(download);
        download.setBounds(390, 510, 220, 40);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/img/close.png"))); // NOI18N
        jButton6.setBorderPainted(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(1050, 10, 50, 50);

        conection.setText("Iniciar Conexión");
        conection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conectionActionPerformed(evt);
            }
        });
        getContentPane().add(conection);
        conection.setBounds(380, 140, 140, 30);

        update.setText("Refrescar");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update);
        update.setBounds(220, 440, 90, 23);

        logs.setEditable(false);
        logs.setColumns(20);
        logs.setRows(5);
        jScrollPane2.setViewportView(logs);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(860, 260, 240, 240);

        hashtable.setEditable(false);
        hashtable.setColumns(20);
        hashtable.setRows(5);
        jScrollPane3.setViewportView(hashtable);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(30, 470, 280, 80);

        centraladdress.setText("localhost");
        centraladdress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                centraladdressActionPerformed(evt);
            }
        });
        getContentPane().add(centraladdress);
        centraladdress.setBounds(30, 220, 190, 30);

        address.setText("localhost");
        getContentPane().add(address);
        address.setBounds(30, 280, 190, 30);

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(30, 430, 280, 60);

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Número de descargas:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(30, 340, 280, 14);

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Resultados...");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(380, 240, 270, 14);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Dirección de Adaptador:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(30, 260, 130, 14);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Estadisticas:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(30, 320, 130, 14);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/img/informes.png"))); // NOI18N
        jButton4.setBorderPainted(false);
        getContentPane().add(jButton4);
        jButton4.setBounds(30, 380, 170, 40);

        jButton3.setText("Asignar");
        jButton3.setBorderPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(230, 280, 110, 30);

        jButton2.setText("Asignar");
        jButton2.setBorderPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(230, 220, 110, 30);

        search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/img/search.png"))); // NOI18N
        search.setBorderPainted(false);
        search.setEnabled(false);
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search);
        search.setBounds(1040, 170, 60, 60);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/img/logo-icon.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 30, 350, 120);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/img/header.png"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(-10, 0, 1320, 170);

        jLabel1.setBackground(new java.awt.Color(0, 153, 153));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/img/fondo.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 10, 1240, 730);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchtextActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        try {
            // TODO add your handling code here:
            Controller.setLog(logs,"Inciando busqueda");
            Long hash = RespuestaUtils.generarHash(searchtext.getText()).longValue();
            NodoRF nodo = Nodo.obtenerInstancia().seleccionarNodo(hash);
            //Obtiene la IP y Descarga el archivo
            if ((hash > Nodo.obtenerInstancia().getHash().longValue())&&(nodo!=null)) {
                Nodo.getInstancia().setSolicitante(true);
                Mensaje mensaje = new Mensaje("who", hash, Nodo.getInstancia(), nodo);
                ArrayList<Nodo> duenos = (ArrayList<Nodo>)new ConexionUtils().enviarMensaje(mensaje);
                if (duenos.size()>0){
                results.setModel(Controller.fillTable(searchtext.getText(), duenos));
                Controller.setLog(logs,"Busqueda finalizada");
                }else 
                Controller.setLog(logs,"Recurso no encontrado");
            }else{
                Nodo.getInstancia().setSolicitante(true);
                NodoRF primero = (NodoRF) new ConexionUtils().enviarMensaje(new Mensaje("first", Fantasma.obtenerInstancia()));
                ArrayList <Nodo> duenos  = (ArrayList<Nodo>)new ConexionUtils().enviarMensaje(new Mensaje("who",hash,
                        Nodo.getInstancia(), primero));
                if (duenos.size()>0){
                results.setModel(Controller.fillTable(searchtext.getText(), duenos));
                Controller.setLog(logs,"Busqueda finalizada");
                }else 
                Controller.setLog(logs,"Recurso no encontrado"); 
            }
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        SistemaUtil.servidorTiempo = centraladdress.getText();
        EjecutarComando.linea("network " + centraladdress.getText() + " 2000 central");
        centraladdress.setEnabled(false);
        Controller.setLog(logs,"Asignacion exitosa");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadActionPerformed
        // TODO add your handling code here:
        String resource = (String) results.getValueAt(results.getSelectedRow(),0);
        Controller.setLog(logs,"Iniciando descarga");
        try {
            Long hash = RespuestaUtils.generarHash(resource).longValue();
            NodoRF nodo = Nodo.obtenerInstancia().seleccionarNodo(hash);
            LoggerUtil.obtenerInstancia().Log("Buscando recurso "+nodo.getDireccion()+" tiempo: "+obtenerHora());
            //Obtiene la IP y Descarga el archivo
            if ((hash > Nodo.obtenerInstancia().getHash().longValue())&&(nodo!=null)) {
                Nodo.getInstancia().setSolicitante(true);
                Mensaje mensaje = new Mensaje("who", hash, Nodo.getInstancia(), nodo);
                ArrayList<Nodo> duenos = (ArrayList<Nodo>)new ConexionUtils().enviarMensaje(mensaje);
                  if (duenos!=null){
                    if (!duenos.isEmpty()) {
                        LoggerUtil.obtenerInstancia().Log("Recurso Encontrado"+nodo.getDireccion()+" tiempo: "+obtenerHora());
                        new Descargas(duenos,resource,hash).start();
                         Controller.setLog(logs,"Procesando...");
                     } else {
                        if(!busquedaInterna(resource,hash)){
                          System.out.println("Archivo no encontrado");
                        }
                    }
                  }
            }else{
                Nodo.getInstancia().setSolicitante(true);
                NodoRF primero = (NodoRF) new ConexionUtils().enviarMensaje(new Mensaje("first", Fantasma.obtenerInstancia()));
                ArrayList <Nodo> duenos  = (ArrayList<Nodo>)new ConexionUtils().enviarMensaje(new Mensaje("who",hash,
                        Nodo.getInstancia(), primero));
                if (!duenos.isEmpty()) {
                    new Descargas(duenos,resource,hash).start();
                    Controller.setLog(logs,"Procesando...");
                } else {
                    if(!busquedaInterna(resource,hash)){
                     
                      System.out.println("Archivo no encontrado");
                    }
                }
           }

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_downloadActionPerformed

    private void centraladdressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_centraladdressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_centraladdressActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        EjecutarComando.linea("finish");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        EjecutarComando.linea("network " + address.getText()
                               + " " + this.seleccionarPuerto() + " miembro");
        SistemaUtil.tipo = "miembro";
        address.setEnabled(false);
        address.setEditable(false);
        EjecutarComando.linea("listen");
        EjecutarComando.linea("listenfile");
        Controller.setLog(logs,"Asignacion exitosa");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void conectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conectionActionPerformed
        // TODO add your handling code here:
        try {
                NodoRF mynodorf = new NodoRF(Nodo.obtenerInstancia().getDireccion(),Nodo.getInstancia().getPuertopeticion());
                LoggerUtil.obtenerInstancia().Log("Solicitando agregar nodo "+Nodo.obtenerInstancia().getDireccion()+" tiempo: "+obtenerHora());
                new ConexionUtils().enviarMensaje(new Mensaje("addnode",mynodorf,Fantasma.obtenerInstancia()));
            } catch (NoSuchAlgorithmException e) {
                e.printStackTrace();
        }
        search.setEnabled(true);
        searchtext.setEditable(true);
        searchtext.setEnabled(true);
        Controller.setLog(logs,"Conexion con servidor central exitoso");
    }//GEN-LAST:event_conectionActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        int i =0;
        hashtable.setText("");
        for (Map.Entry<Integer, NodoRF> entry : Nodo.getInstancia().getTabla().entrySet()) {
               hashtable.setText(hashtable.getText()+i+".- nodo - "+entry.getValue().getHash().longValue()+"\n");
               i++;
        } 
    }//GEN-LAST:event_updateActionPerformed

    private String seleccionarPuerto(){
        String respuesta ="";
        Integer valor =0;
        while ((valor<2001)||(valor>5000)){
            Random r = new Random();
            valor = r.nextInt(5000);
        }
        respuesta = valor.toString();
        return respuesta;
    }
    
    public boolean busquedaInterna(String nombre,Long hash){
      Recurso recurso = Nodo.getInstancia().buscarRecurso(nombre);
      ArrayList<Nodo> lista = new ArrayList<Nodo>();
      lista.add(Nodo.getInstancia());
      if (recurso != null) {
        new Descargas(lista,nombre,hash).start();
        return true; 
      }
      return false; 
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JTextField centraladdress;
    private javax.swing.JButton conection;
    private javax.swing.JButton download;
    private javax.swing.JTextArea hashtable;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea logs;
    private javax.swing.JTable results;
    private javax.swing.JButton search;
    private javax.swing.JTextField searchtext;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
